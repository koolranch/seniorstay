generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  accounts      Account[]
  favorites     Favorite[]
  sessions      Session[]
}

model Favorite {
  id         String   @id @default(uuid())
  userId     String
  providerId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, providerId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Community {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  city        String
  city_slug   String?
  state       String
  description String?
  imageUrl    String?
  zip         String?
  address     String?
  phone       String?
  website     String?
  email       String?
  services    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Lead {
  id            String   @id @default(cuid())
  fullName      String
  email         String?
  phone         String?
  cityOrZip     String?
  careType      String?
  moveInTimeline String?  
  notes         String?
  communityName String?
  pageType      String?
  sourceSlug    String?
  city          String?
  state         String?
  address       String?
  services      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  status        String   @default("new")
}
